{"ast":null,"code":"import _toConsumableArray from\"/Users/nando/Documents/GitHub/Sketchfab_Configurator/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/nando/Documents/GitHub/Sketchfab_Configurator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import\"../Styles/accessories.css\";import InfoPic from\"../Images/../Images/information.svg\";import Check from\"../Images/check_circle.png\";import Reset from\"../Images/reset.png\";import Slider from\"../Images/vertical-slider.png\";import Data from\"../api/API_Accessories.json\";import Dots from\"./Dots\";import{jsx as _jsx}from\"react/jsx-runtime\";function Accessories(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),accessoryTab=_useState2[0],setAccessoryTab=_useState2[1];//current accessory tab selection\nvar _useState3=useState([0,0,0,0,0,0,3]),_useState4=_slicedToArray(_useState3,2),equipment=_useState4[0],setEquipment=_useState4[1];//equipment current selection\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),annotationSel=_useState6[0],setAnnotationSel=_useState6[1];//Annotation Visibility\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),accessoryFocus=_useState8[0],setAccessoryFocus=_useState8[1];//Accessory Visibility\n//update current tab selection (value = tabIndex)\nfunction AccessoryTabSelection(value){//Get accessory list\nvar elem=document.getElementsByClassName(\"leftside\");//check if the selection is the current selected tab so we can skip\nif(value===accessoryTab){//Clicked on the already selected tab\n//Send accessoryTab index values upstream to change material visibility\nif(accessoryFocus){//already on...so turn off focus\nprops.AccessoryVisibility(9);elem[value].classList.remove(\"underline\");}else{//turn on focus\nprops.AccessoryVisibility(value);elem[value].classList.add(\"underline\");}setAccessoryFocus(!accessoryFocus);}else{//Manually Send accessoryTab index of 9 to change material to full visibility\nprops.AccessoryVisibility(9);setAccessoryFocus(false);//Reset and turn off Annotations\nsetAnnotationSel(null);props.AnnotationVisibility(false);//Set accessory to fetch api for proper information displayed\nsetAccessoryTab(value);//Loop through accessory list and assign default styling for all   \nfor(var i=0;i<elem.length;i++){elem[i].className=\"leftside\";}//update current tab selection with higlighted styling\nelem[value].classList.add(\"btnSelected\");}}//send values to the sketchfabviewer specifiying the equipped accessory\n//AccessorieID(int), ObjectID(int), TextureChange(bool), UID(int)\nfunction EquipAccessory(accessoryTab,id,texChange,uid){// Create a copy of the array\nvar updatedEquipment=_toConsumableArray(equipment);// Modify the desired index\nupdatedEquipment[accessoryTab]=id;//check if the selection is the already selected accessory\nif(updatedEquipment[accessoryTab]==equipment[accessoryTab]){console.log('same Accessory is clicked');props.AccessorySelection([accessoryTab,id,texChange,uid]);//turn off item if its an accessory.\n}else{// Update the state with the modified array\nsetEquipment(updatedEquipment);//Send values to parent\nprops.AccessorySelection([accessoryTab,id,texChange,uid]);//turn off annotation\nsetAnnotationSel(null);props.AnnotationVisibility(false);}}function ShowAnnotations(id){//Only show annotation if its for the current equipment\nif(id===equipment[accessoryTab]){//check if the selection is the already selected annotation\nif(id===annotationSel){setAnnotationSel(null);props.AnnotationVisibility(false);}else{setAnnotationSel(id);props.AnnotationVisibility(true);}}else{console.log('not the current selected equipment');}}function ResetConfig(){setEquipment([0,0,0,0,0,0,3]);//Also if suppressor is on lets turn it off and change the camera position or atleast make a call to move the camera correctly. \n//Pass a unique value (1000000) that forces a reset on texutres\nprops.AccessorySelection([0,0,true,1000000]);}return/*#__PURE__*/_jsx(\"div\",{id:\"load-accessories\",className:\"accessories\"});}export default Accessories;","map":{"version":3,"names":["React","useState","InfoPic","Check","Reset","Slider","Data","Dots","jsx","_jsx","Accessories","props","_useState","_useState2","_slicedToArray","accessoryTab","setAccessoryTab","_useState3","_useState4","equipment","setEquipment","_useState5","_useState6","annotationSel","setAnnotationSel","_useState7","_useState8","accessoryFocus","setAccessoryFocus","AccessoryTabSelection","value","elem","document","getElementsByClassName","AccessoryVisibility","classList","remove","add","AnnotationVisibility","i","length","className","EquipAccessory","id","texChange","uid","updatedEquipment","_toConsumableArray","console","log","AccessorySelection","ShowAnnotations","ResetConfig"],"sources":["/Users/nando/Documents/GitHub/Sketchfab_Configurator/src/Componets/Accessories.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../Styles/accessories.css\";\nimport InfoPic from \"../Images/../Images/information.svg\";\nimport Check from \"../Images/check_circle.png\";\nimport Reset from \"../Images/reset.png\";\nimport Slider from \"../Images/vertical-slider.png\";\nimport Data from \"../api/API_Accessories.json\";\nimport Dots from \"./Dots\";\n\nfunction Accessories(props) {\n  const [accessoryTab, setAccessoryTab] = useState(0);//current accessory tab selection\n  const [equipment, setEquipment] = useState([0,0,0,0,0,0,3])//equipment current selection\n  const [annotationSel, setAnnotationSel] = useState(null);//Annotation Visibility\n  const [accessoryFocus, setAccessoryFocus] = useState(false);//Accessory Visibility\n\n  //update current tab selection (value = tabIndex)\n  function AccessoryTabSelection(value){\n    //Get accessory list\n    var elem = document.getElementsByClassName(\"leftside\");  \n\n    //check if the selection is the current selected tab so we can skip\n    if(value === accessoryTab){//Clicked on the already selected tab\n      //Send accessoryTab index values upstream to change material visibility\n      if(accessoryFocus){//already on...so turn off focus\n        props.AccessoryVisibility(9);\n        elem[value].classList.remove(\"underline\");\n      }else{//turn on focus\n        props.AccessoryVisibility(value);\n        elem[value].classList.add(\"underline\");\n      }\n      setAccessoryFocus(!accessoryFocus);\n    }else{\n      //Manually Send accessoryTab index of 9 to change material to full visibility\n      props.AccessoryVisibility(9);\n      setAccessoryFocus(false);\n\n      //Reset and turn off Annotations\n      setAnnotationSel(null);\n      props.AnnotationVisibility(false);\n\n      //Set accessory to fetch api for proper information displayed\n      setAccessoryTab(value);\n  \n      //Loop through accessory list and assign default styling for all   \n      for (var i = 0; i < elem.length; i++) {\n        elem[i].className = \"leftside\";\n      }\n      //update current tab selection with higlighted styling\n      elem[value].classList.add(\"btnSelected\");\n    }\n  }\n  \n  //send values to the sketchfabviewer specifiying the equipped accessory\n  //AccessorieID(int), ObjectID(int), TextureChange(bool), UID(int)\n  function EquipAccessory(accessoryTab, id, texChange, uid){\n    // Create a copy of the array\n    const updatedEquipment = [...equipment];\n\n    // Modify the desired index\n    updatedEquipment[accessoryTab] = id; \n\n    //check if the selection is the already selected accessory\n    if(updatedEquipment[accessoryTab] == equipment[accessoryTab]){\n      console.log('same Accessory is clicked');\n      props.AccessorySelection([accessoryTab, id, texChange, uid]);\n\n      //turn off item if its an accessory.\n    }else{\n      // Update the state with the modified array\n      setEquipment(updatedEquipment); \n  \n      //Send values to parent\n      props.AccessorySelection([accessoryTab, id, texChange, uid]);\n\n      //turn off annotation\n      setAnnotationSel(null)\n      props.AnnotationVisibility(false);\n\n    }\n  }\n\n  function ShowAnnotations(id){\n    //Only show annotation if its for the current equipment\n    if(id===equipment[accessoryTab]){\n      //check if the selection is the already selected annotation\n      if(id === annotationSel){\n        setAnnotationSel(null)\n        props.AnnotationVisibility(false);\n      }else{\n        setAnnotationSel(id)\n        props.AnnotationVisibility(true);\n      }\n    }else{\n      console.log('not the current selected equipment')\n    }\n  }\n\n  function ResetConfig(){\n    setEquipment([0,0,0,0,0,0,3])\n    //Also if suppressor is on lets turn it off and change the camera position or atleast make a call to move the camera correctly. \n\n    //Pass a unique value (1000000) that forces a reset on texutres\n    props.AccessorySelection([0, 0, true, 1000000]);\n  }\n\n  return (\n    <div id='load-accessories' className=\"accessories\">\n      {/* <p className=\"scroll\">SCROLL</p> */}\n    </div>\n  );\n}\n\nexport default Accessories;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}