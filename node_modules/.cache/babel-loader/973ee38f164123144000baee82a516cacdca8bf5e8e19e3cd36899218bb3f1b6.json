{"ast":null,"code":"import{useEffect,useState}from'react';import{useIsMount}from'../useIsMount';import{MaterialChange}from'./MaterialChange';export var ObjectVisibility=function ObjectVisibility(props,apiRef,materials){//Function that runs and returns a bool on initial mount\nvar isMount=useIsMount();var objTexture={internalFormat:\"RGB\",magFilter:\"LINEAR\",minFilter:\"LINEAR_MIPMAP_LINEAR\",texCoordUnit:1,textureTarget:\"TEXTURE_2D\",uid:\"\",wrapS:\"REPEAT\",wrapT:\"REPEAT\"};var objectsStateID=[4,2,18,1];//Accessories material setID Manually set. \nuseEffect(function(){if(isMount){console.log('Mounting in ObjectVisibility');}else{//Run code after initial mount     \nconsole.log(props);for(var i=0;i<materials.current.length;i++){//save out materials\nvar m=materials.current[i];if(props.AccessoryVisibility===9){//special index indicating fully visible object\nm.channels.Opacity={enable:true,factor:1.0,type:\"dithering\",objTexture:objTexture};if(m.name.includes(\"OpticB\")){m.channels.Opacity={enable:true,factor:0,type:\"refraction\",objTexture:objTexture};}apiRef.current.setMaterial(materials.current[i],function(err){});//TODO Bad hardcoded method\n// if(materials.current[i].name.endsWith(props.AccessorySelection[0])){\n//     if( materials.current[i].name.match(/^\\d/) ){ \n//         if(materials.current[i].name.startsWith(props.AccessorySelection[1])){\n//             console.log('Material Assigned')\n//             console.log(materials.current[i].name)\n//             console.log(\"Its this accessory that should be getting changed: \"+ props.AccessorySelection[1])\n//             console.log(\"From this tab: \"+ props.AccessorySelection[0])\n//             materials.current[i].stateSetID  = objectsStateID[props.AccessorySelection[0]]\n//             apiRef.current.setMaterial(materials.current[i], function(err) {\n//             });\n//         }\n//     }\n// }else{\n//     apiRef.current.setMaterial(materials.current[i], function(err) {\n//     });\n// }\n}else{//Check that the material selected is for the correct accessory being focused on\nif(!m.name.endsWith(props.AccessoryVisibility)){//All other non-focused objects\nm.channels.Opacity={enable:true,factor:0.1,type:\"dithering\",objTexture:objTexture};// //finally set the new material.\napiRef.current.setMaterial(m,function(err){// console.log(err);\n});}else{//Focused Object\nm.channels.Opacity={enable:true,factor:1.0,type:\"dithering\",objTexture:objTexture};if(m.name.includes(\"OpticB\")){m.channels.Opacity={enable:true,factor:0,type:\"refraction\",objTexture:objTexture};}//TODO Bad hardcoded method\nif(materials.current[i].name.endsWith(props.AccessoryVisibility)){if(materials.current[i].name.match(/^\\d/)){if(materials.current[i].name.startsWith(props.AccessorySelection[1])){console.log('Material Assigned');console.log(materials.current[i].name);console.log(\"Its this accessory that should be getting changed: \"+props.AccessorySelection[1]);console.log(\"From this tab: \"+props.AccessorySelection[0]);materials.current[i].stateSetID=objectsStateID[props.AccessoryVisibility];apiRef.current.setMaterial(materials.current[i],function(err){console.log('Material Assigned');});}}}}}}}},[props.AccessoryVisibility]);};","map":{"version":3,"names":["useEffect","useState","useIsMount","MaterialChange","ObjectVisibility","props","apiRef","materials","isMount","objTexture","internalFormat","magFilter","minFilter","texCoordUnit","textureTarget","uid","wrapS","wrapT","objectsStateID","console","log","i","current","length","m","AccessoryVisibility","channels","Opacity","enable","factor","type","name","includes","setMaterial","err","endsWith","match","startsWith","AccessorySelection","stateSetID"],"sources":["/Users/nando/Documents/GitHub/Sketchfab_Configurator/src/Componets/3DComponents/ObjectVisibility.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useIsMount } from '../useIsMount';\nimport { MaterialChange } from './MaterialChange';\n\nexport const ObjectVisibility = ( props, apiRef, materials ) => {\n    //Function that runs and returns a bool on initial mount\n    const isMount = useIsMount();\n\n    let objTexture = {\n        internalFormat: \"RGB\",\n        magFilter: \"LINEAR\",\n        minFilter: \"LINEAR_MIPMAP_LINEAR\",\n        texCoordUnit: 1,\n        textureTarget: \"TEXTURE_2D\",\n        uid: \"\",\n        wrapS: \"REPEAT\",\n        wrapT: \"REPEAT\"\n    };\n\n    const objectsStateID = [4,2,18,1]//Accessories material setID Manually set. \n    useEffect(() => {\n        if(isMount){\n            console.log('Mounting in ObjectVisibility')\n        }else{\n            //Run code after initial mount     \n\n            console.log(props)\n            for (var i = 0; i < materials.current.length; i++) {\n                //save out materials\n                var m = materials.current[i];\n                if(props.AccessoryVisibility===9){//special index indicating fully visible object\n                    m.channels.Opacity = {\n                        enable: true,\n                        factor: 1.0,\n                        type:\"dithering\",\n                        objTexture\n                    };\n\n                    if(m.name.includes(\"OpticB\")){\n                        m.channels.Opacity = {\n                            enable: true,\n                            factor: 0,\n                            type:\"refraction\",\n                            objTexture\n                        };\n                    }\n\n                    apiRef.current.setMaterial(materials.current[i], function(err) {\n                    });\n                    //TODO Bad hardcoded method\n                    // if(materials.current[i].name.endsWith(props.AccessorySelection[0])){\n                    //     if( materials.current[i].name.match(/^\\d/) ){ \n                    //         if(materials.current[i].name.startsWith(props.AccessorySelection[1])){\n\n                    //             console.log('Material Assigned')\n                    //             console.log(materials.current[i].name)\n                    //             console.log(\"Its this accessory that should be getting changed: \"+ props.AccessorySelection[1])\n                    //             console.log(\"From this tab: \"+ props.AccessorySelection[0])\n\n                    //             materials.current[i].stateSetID  = objectsStateID[props.AccessorySelection[0]]\n                    //             apiRef.current.setMaterial(materials.current[i], function(err) {\n                    //             });\n                    //         }\n                    //     }\n                    // }else{\n                    //     apiRef.current.setMaterial(materials.current[i], function(err) {\n                    //     });\n                    // }\n                }else{\n                    //Check that the material selected is for the correct accessory being focused on\n                    if(!m.name.endsWith(props.AccessoryVisibility)){\n                        //All other non-focused objects\n                        m.channels.Opacity = {\n                            enable:true,\n                            factor: 0.1,\n                            type:\"dithering\",\n                            objTexture\n                        };\n                        // //finally set the new material.\n                        apiRef.current.setMaterial(m, function(err) {\n                            // console.log(err);\n                        });\n                    }else{\n                        //Focused Object\n                        m.channels.Opacity = {\n                            enable: true,\n                            factor: 1.0,\n                            type:\"dithering\",\n                            objTexture\n                        };\n                        if(m.name.includes(\"OpticB\")){\n                            m.channels.Opacity = {\n                                enable: true,\n                                factor: 0,\n                                type:\"refraction\",\n                                objTexture\n                            };\n                        }\n                        //TODO Bad hardcoded method\n                        if(materials.current[i].name.endsWith(props.AccessoryVisibility)){\n                            if( materials.current[i].name.match(/^\\d/) ){ \n                                if(materials.current[i].name.startsWith(props.AccessorySelection[1])){\n\n                                    console.log('Material Assigned')\n                                    console.log(materials.current[i].name)\n                                    console.log(\"Its this accessory that should be getting changed: \"+ props.AccessorySelection[1])\n                                    console.log(\"From this tab: \"+ props.AccessorySelection[0])\n\n                                    materials.current[i].stateSetID  = objectsStateID[props.AccessoryVisibility]\n                                    apiRef.current.setMaterial(materials.current[i], function(err) {\n                                        console.log('Material Assigned')\n                                    });\n                                }\n                            }\n                        }\n\n                    }\n                }\n\n\n            }\n        }\n        \n\n            \n      }, [ props.AccessoryVisibility ]);\n}"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,UAAU,KAAQ,eAAe,CAC1C,OAASC,cAAc,KAAQ,kBAAkB,CAEjD,MAAO,IAAM,CAAAC,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAKC,KAAK,CAAEC,MAAM,CAAEC,SAAS,CAAM,CAC5D;AACA,GAAM,CAAAC,OAAO,CAAGN,UAAU,CAAC,CAAC,CAE5B,GAAI,CAAAO,UAAU,CAAG,CACbC,cAAc,CAAE,KAAK,CACrBC,SAAS,CAAE,QAAQ,CACnBC,SAAS,CAAE,sBAAsB,CACjCC,YAAY,CAAE,CAAC,CACfC,aAAa,CAAE,YAAY,CAC3BC,GAAG,CAAE,EAAE,CACPC,KAAK,CAAE,QAAQ,CACfC,KAAK,CAAE,QACX,CAAC,CAED,GAAM,CAAAC,cAAc,CAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjClB,SAAS,CAAC,UAAM,CACZ,GAAGQ,OAAO,CAAC,CACPW,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC/C,CAAC,IAAI,CACD;AAEAD,OAAO,CAACC,GAAG,CAACf,KAAK,CAAC,CAClB,IAAK,GAAI,CAAAgB,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGd,SAAS,CAACe,OAAO,CAACC,MAAM,CAAEF,CAAC,EAAE,CAAE,CAC/C;AACA,GAAI,CAAAG,CAAC,CAAGjB,SAAS,CAACe,OAAO,CAACD,CAAC,CAAC,CAC5B,GAAGhB,KAAK,CAACoB,mBAAmB,GAAG,CAAC,CAAC,CAAC;AAC9BD,CAAC,CAACE,QAAQ,CAACC,OAAO,CAAG,CACjBC,MAAM,CAAE,IAAI,CACZC,MAAM,CAAE,GAAG,CACXC,IAAI,CAAC,WAAW,CAChBrB,UAAU,CAAVA,UACJ,CAAC,CAED,GAAGe,CAAC,CAACO,IAAI,CAACC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CACzBR,CAAC,CAACE,QAAQ,CAACC,OAAO,CAAG,CACjBC,MAAM,CAAE,IAAI,CACZC,MAAM,CAAE,CAAC,CACTC,IAAI,CAAC,YAAY,CACjBrB,UAAU,CAAVA,UACJ,CAAC,CACL,CAEAH,MAAM,CAACgB,OAAO,CAACW,WAAW,CAAC1B,SAAS,CAACe,OAAO,CAACD,CAAC,CAAC,CAAE,SAASa,GAAG,CAAE,CAC/D,CAAC,CAAC,CACF;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ,CAAC,IAAI,CACD;AACA,GAAG,CAACV,CAAC,CAACO,IAAI,CAACI,QAAQ,CAAC9B,KAAK,CAACoB,mBAAmB,CAAC,CAAC,CAC3C;AACAD,CAAC,CAACE,QAAQ,CAACC,OAAO,CAAG,CACjBC,MAAM,CAAC,IAAI,CACXC,MAAM,CAAE,GAAG,CACXC,IAAI,CAAC,WAAW,CAChBrB,UAAU,CAAVA,UACJ,CAAC,CACD;AACAH,MAAM,CAACgB,OAAO,CAACW,WAAW,CAACT,CAAC,CAAE,SAASU,GAAG,CAAE,CACxC;AAAA,CACH,CAAC,CACN,CAAC,IAAI,CACD;AACAV,CAAC,CAACE,QAAQ,CAACC,OAAO,CAAG,CACjBC,MAAM,CAAE,IAAI,CACZC,MAAM,CAAE,GAAG,CACXC,IAAI,CAAC,WAAW,CAChBrB,UAAU,CAAVA,UACJ,CAAC,CACD,GAAGe,CAAC,CAACO,IAAI,CAACC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CACzBR,CAAC,CAACE,QAAQ,CAACC,OAAO,CAAG,CACjBC,MAAM,CAAE,IAAI,CACZC,MAAM,CAAE,CAAC,CACTC,IAAI,CAAC,YAAY,CACjBrB,UAAU,CAAVA,UACJ,CAAC,CACL,CACA;AACA,GAAGF,SAAS,CAACe,OAAO,CAACD,CAAC,CAAC,CAACU,IAAI,CAACI,QAAQ,CAAC9B,KAAK,CAACoB,mBAAmB,CAAC,CAAC,CAC7D,GAAIlB,SAAS,CAACe,OAAO,CAACD,CAAC,CAAC,CAACU,IAAI,CAACK,KAAK,CAAC,KAAK,CAAC,CAAE,CACxC,GAAG7B,SAAS,CAACe,OAAO,CAACD,CAAC,CAAC,CAACU,IAAI,CAACM,UAAU,CAAChC,KAAK,CAACiC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAEjEnB,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAChCD,OAAO,CAACC,GAAG,CAACb,SAAS,CAACe,OAAO,CAACD,CAAC,CAAC,CAACU,IAAI,CAAC,CACtCZ,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAEf,KAAK,CAACiC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAC/FnB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEf,KAAK,CAACiC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAE3D/B,SAAS,CAACe,OAAO,CAACD,CAAC,CAAC,CAACkB,UAAU,CAAIrB,cAAc,CAACb,KAAK,CAACoB,mBAAmB,CAAC,CAC5EnB,MAAM,CAACgB,OAAO,CAACW,WAAW,CAAC1B,SAAS,CAACe,OAAO,CAACD,CAAC,CAAC,CAAE,SAASa,GAAG,CAAE,CAC3Df,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CACpC,CAAC,CAAC,CACN,CACJ,CACJ,CAEJ,CACJ,CAGJ,CACJ,CAIF,CAAC,CAAE,CAAEf,KAAK,CAACoB,mBAAmB,CAAE,CAAC,CACvC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}