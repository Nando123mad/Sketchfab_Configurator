{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport { useIsMount } from \"../useIsMount\";\n\n//Accessory Tab Hide/Show used to communicate with sketchfab viewer\nexport const AccessoriesMenuOffset = (props, apiRef) => {\n  _s();\n  //Function that runs and returns a bool on initial mount\n  const isMount = useIsMount();\n  useEffect(() => {\n    if (isMount) {\n      //first mount\n      // console.log('initial mount')\n    } else {\n      //after first mount\n      if (props.AccessoriesMenuVisibility) {\n        console.log(\"move to the right\");\n        //TODO This should be dynamic by taking in screen width information for proper offset 0.05 for 2500px and 0.005 for 1440\n        const camMovY = 1 / 1440 * window.innerWidth; //dynamic window width for scaling the movement\n        console.log(camMovY);\n        if (props.CameraOffset) {\n          //True, so were moving the object to the right and accomodating the suppressor\n\n          //[position, target,duration]\n          console.log('suppressor on');\n          apiRef.current.setCameraLookAt([-0.4, -0.5, -0.05],\n          //position\n          [0.0, -0.075, -0.00005610803206950726],\n          //target \n          2.0 //duration\n          );\n        } else {\n          //False, so were only moving the object to the right. no suppressor accomodation.\n\n          //if suppressor on{ Change position of camera and target }\n          //[position, target,duration]\n          console.log('suppressor off');\n          apiRef.current.setCameraLookAt([-0.352825848627620646, -0.1, -0.05],\n          //position\n          [0.0, -0.025, -0.00005610803206950726],\n          //target \n          2.0 //duration\n          );\n        }\n      } else {\n        console.log(\"move center\");\n        // apiRef.current.recenterCamera();//Alternative, but it jerks the object into the center view. *unwanted behavior*\n        //TODO This should be dynamic by taking in screen width information for proper centering\n\n        if (props.CameraOffset) {\n          //True, so were moving to the center and accomodating the suppressor\n          //[position, target,duration]\n          apiRef.current.setCameraLookAt([-0.4, -0.025, 0.0],\n          //position\n          [0.0, -0.075, -0.00005610803206950726],\n          //target \n          2.0 //duration\n          );\n        } else {\n          //False, so were only moving the object to the center. no suppressor accomodation.\n          apiRef.current.setCameraLookAt([-0.312825848627620646, -0.025, 0.0], [0.0, -0.025, -0.00005610803206950726], 2.0);\n        }\n      }\n    }\n  }, [props.AccessoriesMenuVisibility, props.CameraOffset]);\n};\n_s(AccessoriesMenuOffset, \"WpLIN+14gCkECZeu9s1wHPvd3Vg=\", false, function () {\n  return [useIsMount];\n});\n_c = AccessoriesMenuOffset;\nvar _c;\n$RefreshReg$(_c, \"AccessoriesMenuOffset\");","map":{"version":3,"names":["useRef","useEffect","useIsMount","AccessoriesMenuOffset","props","apiRef","_s","isMount","AccessoriesMenuVisibility","console","log","camMovY","window","innerWidth","CameraOffset","current","setCameraLookAt","_c","$RefreshReg$"],"sources":["/Users/nando/Documents/GitHub/Sketchfab_Configurator/src/Componets/3DComponents/AccessoriesMenuOffset.jsx"],"sourcesContent":["import {useRef, useEffect} from \"react\";\nimport {useIsMount} from \"../useIsMount\";\n\n//Accessory Tab Hide/Show used to communicate with sketchfab viewer\nexport const AccessoriesMenuOffset = (props, apiRef) => {\n  //Function that runs and returns a bool on initial mount\n  const isMount = useIsMount();\n\n  useEffect(() => {\n    if (isMount) {\n      //first mount\n      // console.log('initial mount')\n    } else {\n      //after first mount\n      if (props.AccessoriesMenuVisibility) {\n\n        console.log(\"move to the right\");\n        //TODO This should be dynamic by taking in screen width information for proper offset 0.05 for 2500px and 0.005 for 1440\n        const camMovY = (1 / 1440) * window.innerWidth; //dynamic window width for scaling the movement\n        console.log(camMovY)\n\n        if(props.CameraOffset){\n          //True, so were moving the object to the right and accomodating the suppressor\n\n          //[position, target,duration]\n          console.log('suppressor on')\n          apiRef.current.setCameraLookAt(\n            [-0.4, -0.5, -0.05],//position\n            [0.0, -0.075, -0.00005610803206950726],//target \n            2.0//duration\n          );\n        }else{\n          //False, so were only moving the object to the right. no suppressor accomodation.\n\n          //if suppressor on{ Change position of camera and target }\n          //[position, target,duration]\n          console.log('suppressor off')\n          apiRef.current.setCameraLookAt(\n            [-0.352825848627620646, -0.1, -0.05],//position\n            [0.0, -0.025, -0.00005610803206950726],//target \n            2.0//duration\n          );\n        }\n\n\n      } else {\n        console.log(\"move center\");\n        // apiRef.current.recenterCamera();//Alternative, but it jerks the object into the center view. *unwanted behavior*\n        //TODO This should be dynamic by taking in screen width information for proper centering\n\n        if(props.CameraOffset){\n          //True, so were moving to the center and accomodating the suppressor\n          //[position, target,duration]\n          apiRef.current.setCameraLookAt(\n            [-0.4, -0.025, 0.0],//position\n            [0.0, -0.075, -0.00005610803206950726],//target \n            2.0//duration\n          );\n        }else{\n          //False, so were only moving the object to the center. no suppressor accomodation.\n          apiRef.current.setCameraLookAt(\n            [-0.312825848627620646, -0.025, 0.0],\n            [0.0, -0.025, -0.00005610803206950726],\n            2.0\n          );\n        }\n\n        \n      }\n    }\n  }, [props.AccessoriesMenuVisibility, props.CameraOffset]);\n};\n"],"mappings":";AAAA,SAAQA,MAAM,EAAEC,SAAS,QAAO,OAAO;AACvC,SAAQC,UAAU,QAAO,eAAe;;AAExC;AACA,OAAO,MAAMC,qBAAqB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAAAC,EAAA;EACtD;EACA,MAAMC,OAAO,GAAGL,UAAU,CAAC,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd,IAAIM,OAAO,EAAE;MACX;MACA;IAAA,CACD,MAAM;MACL;MACA,IAAIH,KAAK,CAACI,yBAAyB,EAAE;QAEnCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChC;QACA,MAAMC,OAAO,GAAI,CAAC,GAAG,IAAI,GAAIC,MAAM,CAACC,UAAU,CAAC,CAAC;QAChDJ,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;QAEpB,IAAGP,KAAK,CAACU,YAAY,EAAC;UACpB;;UAEA;UACAL,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;UAC5BL,MAAM,CAACU,OAAO,CAACC,eAAe,CAC5B,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;UAAC;UACpB,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,sBAAsB,CAAC;UAAC;UACvC,GAAG;UACL,CAAC;QACH,CAAC,MAAI;UACH;;UAEA;UACA;UACAP,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;UAC7BL,MAAM,CAACU,OAAO,CAACC,eAAe,CAC5B,CAAC,CAAC,oBAAoB,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;UAAC;UACrC,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,sBAAsB,CAAC;UAAC;UACvC,GAAG;UACL,CAAC;QACH;MAGF,CAAC,MAAM;QACLP,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B;QACA;;QAEA,IAAGN,KAAK,CAACU,YAAY,EAAC;UACpB;UACA;UACAT,MAAM,CAACU,OAAO,CAACC,eAAe,CAC5B,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC;UAAC;UACpB,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,sBAAsB,CAAC;UAAC;UACvC,GAAG;UACL,CAAC;QACH,CAAC,MAAI;UACH;UACAX,MAAM,CAACU,OAAO,CAACC,eAAe,CAC5B,CAAC,CAAC,oBAAoB,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,EACpC,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,sBAAsB,CAAC,EACtC,GACF,CAAC;QACH;MAGF;IACF;EACF,CAAC,EAAE,CAACZ,KAAK,CAACI,yBAAyB,EAAEJ,KAAK,CAACU,YAAY,CAAC,CAAC;AAC3D,CAAC;AAACR,EAAA,CAnEWH,qBAAqB;EAAA,QAEhBD,UAAU;AAAA;AAAAe,EAAA,GAFfd,qBAAqB;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}