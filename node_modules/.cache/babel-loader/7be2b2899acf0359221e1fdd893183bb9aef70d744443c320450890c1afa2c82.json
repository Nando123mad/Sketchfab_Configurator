{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useEffect, useState } from 'react';\nimport { useIsMount } from '../useIsMount';\n\n//*********REFRENCE**************/\n//props.AccessorySelection[]\n//AccessorieID(int), ObjectID(int), TextureChange(bool), UID(int)\n//*********REFRENCE**************/\n\nexport const ModelChange = (props, apiRef, nodes, itemsCount) => {\n  _s();\n  //Function that runs and returns a bool on initial mount\n  const isMount = useIsMount();\n  const [showing, setShowing] = useState(false);\n  useEffect(() => {\n    if (isMount) {\n      // console.log('Mounting in modelChange')\n    } else {\n      var m = itemsCount.current;\n      if (props.AccessorySelection[2]) {\n        //Check to see if its a texture change or model change\n        // console.log('Only texture will be changed or if resetconfig (models be hidden)')\n        if (props.AccessorySelection[3] === 1000000) {\n          //Reset Config\n          for (var i in m) {\n            apiRef.current.hide(m[i]);\n          }\n          setShowing(false);\n        }\n      } else {\n        //This is a model change\n        // console.log(m)\n        // console.log(props)\n        // console.log(props.AccessorySelection[3])\n        if (props.AccessorySelection[3].toString().startsWith(\"7\")) {\n          //Optics item\n          console.log('test');\n          console.log(m);\n          console.log(props.AccessorySelection[3]);\n          console.log(props.AccessorySelection[3] % 10 * 2);\n          var Selection = props.AccessorySelection[3] % 10 * 2;\n          for (var i in m) {\n            if (Selection == i) {\n              //show\n              if (showing) {\n                console.log(\"this is the index:\" + i);\n                console.log(\"This is the object number:\" + m[i]);\n                apiRef.current.hide(m[i]);\n              } else {\n                console.log(\"this is the index:\" + i);\n                console.log(\"This is the object number:\" + m[i]);\n                apiRef.current.show(m[i]);\n              }\n            } else if (Selection == i - 1) {\n              //Show\n              if (showing) {\n                console.log(\"this is the index:\" + i);\n                console.log(\"This is the object number:\" + m[i]);\n                apiRef.current.hide(m[i]);\n              } else {\n                console.log(\"this is the index:\" + i);\n                console.log(\"This is the object number:\" + m[i]);\n                apiRef.current.show(m[i]);\n              }\n            } else {\n              //hide\n              console.log(\"this is the index:\" + i);\n              console.log(\"hide:\" + m[i]);\n              apiRef.current.hide(m[i]);\n            }\n            if (showing) {//currently showing....so Hide\n              // apiRef.current.hide(m[i]);\n            } else {//currently hidden....so show\n              // apiRef.current.show(m[i]);\n            }\n          }\n          setShowing(!showing);\n        }\n      }\n    }\n  }, [props.AccessorySelection]);\n};\n_s(ModelChange, \"RuPiKkU4APpKzGKebXxyed0xhqU=\", false, function () {\n  return [useIsMount];\n});\n_c = ModelChange;\nvar _c;\n$RefreshReg$(_c, \"ModelChange\");","map":{"version":3,"names":["useRef","useEffect","useState","useIsMount","ModelChange","props","apiRef","nodes","itemsCount","_s","isMount","showing","setShowing","m","current","AccessorySelection","i","hide","toString","startsWith","console","log","Selection","show","_c","$RefreshReg$"],"sources":["/Users/nando/Documents/GitHub/Sketchfab_Configurator/src/Componets/3DComponents/ModelChange.jsx"],"sourcesContent":["import { useRef, useEffect, useState } from 'react';\nimport { useIsMount } from '../useIsMount';\n\n//*********REFRENCE**************/\n    //props.AccessorySelection[]\n    //AccessorieID(int), ObjectID(int), TextureChange(bool), UID(int)\n//*********REFRENCE**************/\n\nexport const ModelChange = ( props, apiRef, nodes, itemsCount ) => {\n    //Function that runs and returns a bool on initial mount\n    const isMount = useIsMount();\n    const [showing, setShowing] = useState(false);\n\n    useEffect(() => {\n        if(isMount){\n            // console.log('Mounting in modelChange')\n        }else{\n            var m = itemsCount.current;\n            if(props.AccessorySelection[2]){ //Check to see if its a texture change or model change\n                // console.log('Only texture will be changed or if resetconfig (models be hidden)')\n                if(props.AccessorySelection[3] === 1000000){//Reset Config\n                    for (var i in m) {\n                        apiRef.current.hide(m[i]);\n                    }\n                    setShowing(false);\n                }\n            }else{//This is a model change\n                // console.log(m)\n                // console.log(props)\n                // console.log(props.AccessorySelection[3])\n                if(props.AccessorySelection[3].toString().startsWith(\"7\")){//Optics item\n                    console.log('test')\n                    console.log(m)\n                    console.log(props.AccessorySelection[3])\n                    console.log((props.AccessorySelection[3] % 10)*2)\n                    var Selection = (props.AccessorySelection[3] % 10)*2;\n                    for (var i in m) {\n\n                        if(Selection == i){\n                            //show\n                            if(showing){\n                                console.log(\"this is the index:\" + i)\n                                console.log(\"This is the object number:\" + m[i])\n                                apiRef.current.hide(m[i]);\n                            }else{\n                                console.log(\"this is the index:\" + i)\n                                console.log(\"This is the object number:\" + m[i])\n                                apiRef.current.show(m[i]);\n                            }\n                        }else if(Selection == i-1 ){\n                            //Show\n                            if(showing){\n                                console.log(\"this is the index:\" + i)\n                                console.log(\"This is the object number:\" + m[i])\n                                apiRef.current.hide(m[i]);\n                            }else{\n                                console.log(\"this is the index:\" + i)\n                                console.log(\"This is the object number:\" + m[i])\n                                apiRef.current.show(m[i]);\n                            }\n                        }else{\n                            //hide\n                            console.log(\"this is the index:\" + i)\n                            console.log(\"hide:\" + m[i])\n                            apiRef.current.hide(m[i]);\n                        }\n\n                        if(showing){//currently showing....so Hide\n                            // apiRef.current.hide(m[i]);\n                        }else{//currently hidden....so show\n                            // apiRef.current.show(m[i]);\n                        }\n                    }\n                    setShowing(!showing)\n                }\n            }\n        }\n      }, [props.AccessorySelection]);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}