{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useEffect, useState } from 'react';\nimport { useIsMount } from '../useIsMount';\n\n//*********REFRENCE**************/\n//props.AccessorySelection[]\n//AccessorieID(int), ObjectID(int), TextureChange(bool), UID(int)\n//*********REFRENCE**************/\n\nexport const ModelChange = (props, apiRef, nodes, itemsCount, opticsCount, lightCount, suppressorCount) => {\n  _s();\n  //Function that runs and returns a bool on initial mount\n  const isMount = useIsMount();\n  const [showing, setShowing] = useState(false);\n  useEffect(() => {\n    if (isMount) {\n      // console.log('Mounting in modelChange')\n    } else {\n      var m = itemsCount.current; //all items\n      var o = opticsCount.current; //optics items\n      var s = suppressorCount.current; //suppressor items\n      var l = lightCount.current; //light items\n\n      // console.log(\"Optics:\" + o);\n      // console.log(\"Light:\" + l);\n      // console.log(\"Suppressor:\" + s);\n\n      if (props.AccessorySelection[2]) {\n        //Check to see if its a texture change or model change\n        // console.log('Only texture will be changed or if resetconfig (models will be hidden)')\n        if (props.AccessorySelection[3] === 1000000) {\n          //Reset Config\n          for (var i in m) {\n            apiRef.current.hide(m[i]);\n          }\n          setShowing(false);\n        }\n      } else {\n        //This is a model change\n\n        // console.log(m)\n        // console.log(props)\n        // console.log(props.AccessorySelection[3])\n\n        if (props.AccessorySelection[3].toString().startsWith(\"7\")) {\n          //Optics item\n          console.log(\"Optics Logic\");\n          // console.log('test')\n          // console.log(o)\n          // console.log(props.AccessorySelection[3])\n          // console.log((props.AccessorySelection[3] % 10)*2)\n          var Selection = props.AccessorySelection[3] % 10 * 2;\n          for (var i in o) {\n            if (Selection == i) {\n              //Show Optics \n              apiRef.current.show(o[i]);\n            } else if (Selection == i - 1) {\n              //Show Optics second\n              apiRef.current.show(o[i]);\n            } else {\n              //Hide non optics\n              apiRef.current.hide(o[i]);\n            }\n          }\n        } else if (props.AccessorySelection[3].toString().startsWith(\"8\")) {\n          //Suppressor item\n          console.log(\"Suppressor Logic\");\n          var Selection = props.AccessorySelection[3] % 10 * 2;\n          for (var j in o) {\n            if (Selection == j) {\n              //Show Suppressor\n              apiRef.current.show(s[j]);\n            } else if (Selection == j - 1) {\n              //Show Suppressor\n              apiRef.current.show(s[j]);\n            } else {\n              //Hide non suppressor\n              apiRef.current.hide(s[j]);\n            }\n          }\n        } else if (props.AccessorySelection[3].toString().startsWith(\"9\")) {\n          //light item\n          console.log(\"Flashlight Logic\");\n          var Selection = props.AccessorySelection[3] % 10 * 2;\n          for (var k in o) {\n            if (Selection == k) {\n              //Show Flashlight\n              apiRef.current.show(l[k]);\n            } else if (Selection == k - 1) {\n              //Show Flashlight\n              apiRef.current.show(l[k]);\n            } else {\n              //Hide non flashlight\n              apiRef.current.hide(l[k]);\n            }\n          }\n        }\n      }\n    }\n  }, [props.AccessorySelection]);\n};\n_s(ModelChange, \"RuPiKkU4APpKzGKebXxyed0xhqU=\", false, function () {\n  return [useIsMount];\n});\n_c = ModelChange;\nvar _c;\n$RefreshReg$(_c, \"ModelChange\");","map":{"version":3,"names":["useRef","useEffect","useState","useIsMount","ModelChange","props","apiRef","nodes","itemsCount","opticsCount","lightCount","suppressorCount","_s","isMount","showing","setShowing","m","current","o","s","l","AccessorySelection","i","hide","toString","startsWith","console","log","Selection","show","j","k","_c","$RefreshReg$"],"sources":["/Users/nando/Documents/GitHub/Sketchfab_Configurator/src/Componets/3DComponents/ModelChange.jsx"],"sourcesContent":["import { useRef, useEffect, useState } from 'react';\nimport { useIsMount } from '../useIsMount';\n\n//*********REFRENCE**************/\n    //props.AccessorySelection[]\n    //AccessorieID(int), ObjectID(int), TextureChange(bool), UID(int)\n//*********REFRENCE**************/\n\nexport const ModelChange = ( props, apiRef, nodes, itemsCount, opticsCount, lightCount, suppressorCount ) => {\n    //Function that runs and returns a bool on initial mount\n    const isMount = useIsMount();\n    const [showing, setShowing] = useState(false);\n\n    useEffect(() => {\n        if(isMount){\n            // console.log('Mounting in modelChange')\n        }else{\n            var m = itemsCount.current;//all items\n            var o = opticsCount.current;//optics items\n            var s = suppressorCount.current;//suppressor items\n            var l = lightCount.current;//light items\n            \n            // console.log(\"Optics:\" + o);\n            // console.log(\"Light:\" + l);\n            // console.log(\"Suppressor:\" + s);\n\n            if(props.AccessorySelection[2]){ //Check to see if its a texture change or model change\n                // console.log('Only texture will be changed or if resetconfig (models will be hidden)')\n                if(props.AccessorySelection[3] === 1000000){//Reset Config\n                    for (var i in m) {\n                        apiRef.current.hide(m[i]);\n                    }\n                    setShowing(false);\n                }\n            }else{//This is a model change\n\n                // console.log(m)\n                // console.log(props)\n                // console.log(props.AccessorySelection[3])\n\n                if(props.AccessorySelection[3].toString().startsWith(\"7\")){ //Optics item\n                    console.log(\"Optics Logic\")\n                    // console.log('test')\n                    // console.log(o)\n                    // console.log(props.AccessorySelection[3])\n                    // console.log((props.AccessorySelection[3] % 10)*2)\n                    var Selection = (props.AccessorySelection[3] % 10)*2;\n                    for (var i in o) {\n                        if(Selection == i){\n                            //Show Optics \n                            apiRef.current.show(o[i]);\n                        }else if(Selection == i-1 ){\n                            //Show Optics second\n                            apiRef.current.show(o[i]);\n                        }else{\n                            //Hide non optics\n                            apiRef.current.hide(o[i]);\n                        }\n                    }\n                }else if(props.AccessorySelection[3].toString().startsWith(\"8\")){ //Suppressor item\n                    console.log(\"Suppressor Logic\")\n                    var Selection = (props.AccessorySelection[3] % 10)*2;\n                    for (var j in o) {\n                        if(Selection == j){\n                            //Show Suppressor\n                            apiRef.current.show(s[j]);\n                        }else if(Selection == j-1 ){\n                            //Show Suppressor\n                            apiRef.current.show(s[j]);\n                        }else{\n                            //Hide non suppressor\n                            apiRef.current.hide(s[j]);\n                        }\n                    }\n                }else if(props.AccessorySelection[3].toString().startsWith(\"9\")){ //light item\n                    console.log(\"Flashlight Logic\")\n                    var Selection = (props.AccessorySelection[3] % 10)*2;\n                    for (var k in o) {\n                        if(Selection == k){\n                            //Show Flashlight\n                            apiRef.current.show(l[k]);\n                        }else if(Selection == k-1 ){\n                            //Show Flashlight\n                            apiRef.current.show(l[k]);\n                        }else{\n                            //Hide non flashlight\n                            apiRef.current.hide(l[k]);\n                        }\n                    }\n                }\n            }\n        }\n      }, [props.AccessorySelection]);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}